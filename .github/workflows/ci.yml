---
name: CI

on:
  push:
    branches-ignore:
      - dependabot/**
  pull_request:
    branches-ignore:
      - dependabot/**
  schedule:
    - cron: '0 3 * * 1' # https://crontab.guru/#0_2_*_*_1

env:
  IMAGE: sommerfeldio/semver
  IMAGE_ACTION: local/semver-action

permissions:
  contents: read

jobs:
  module-ci-lint:
    uses: sommerfeld-io/.github/.github/workflows/module-ci-lint.yml@main

  lint-dockerfile-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: src/main/action/Dockerfile

  lint-dockerfile-go-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: src/main/app/go/Dockerfile

  sonar-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  ci-action:
    runs-on: ubuntu-latest
    needs: ['module-ci-lint', 'lint-dockerfile-action']
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set docker tag ('ci' for main or feature branch)
        id: vars
        run: |
          echo ${{ github.ref }}

          TAG='ci'

          echo "tag = $TAG"
          echo "DOCKER_TAG=$TAG" >> $GITHUB_OUTPUT
        shell: bash
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker image build
        uses: docker/build-push-action@v4
        with:
          context: src/main/action
          platforms: linux/amd64
          push: false
          tags: ${{ env.IMAGE_ACTION }}:${{ steps.vars.outputs.DOCKER_TAG }}

  ci-go-app:
    runs-on: ubuntu-latest
    needs: ['module-ci-lint', 'lint-dockerfile-go-app']
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set docker tag ('ci' for main or feature branch)
        id: vars
        run: |
          echo ${{ github.ref }}

          TAG='ci'

          echo "tag = $TAG"
          echo "DOCKER_TAG=$TAG" >> $GITHUB_OUTPUT
        shell: bash
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker image build
        uses: docker/build-push-action@v4
        with:
          context: src/main/app/go
          platforms: linux/amd64
          push: ${{ github.actor != 'dependabot[bot]' }}
          tags: ${{ env.IMAGE }}:${{ steps.vars.outputs.DOCKER_TAG }}

  on-failure:
    runs-on: ubuntu-latest
    needs: ['module-ci-lint', 'lint-dockerfile-action', 'lint-dockerfile-go-app', 'sonar-scan', 'ci-go-app', 'ci-action']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
